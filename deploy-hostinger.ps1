# Deploy Script cho JKhoa Website l√™n Hostinger
# Ch·∫°y script n√†y ƒë·ªÉ tri·ªÉn khai website l√™n Hostinger hosting

param(
    [Parameter(Mandatory=$true)]
    [string]$FtpServer,
    
    [Parameter(Mandatory=$true)]
    [string]$FtpUsername,
    
    [Parameter(Mandatory=$true)]
    [string]$FtpPassword,
    
    [string]$FtpPath = "/public_html/"
)

Write-Host "üöÄ B·∫Øt ƒë·∫ßu tri·ªÉn khai website jkhoa.dev l√™n Hostinger..." -ForegroundColor Green

# Ki·ªÉm tra xem c√≥ ƒëang ·ªü ƒë√∫ng th∆∞ m·ª•c kh√¥ng
if (-not (Test-Path "index.html")) {
    Write-Host "‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file index.html. H√£y ch·∫°y script n√†y t·ª´ th∆∞ m·ª•c Portfolio-JKhoa" -ForegroundColor Red
    exit 1
}

# T·∫°o danh s√°ch file c·∫ßn upload
$filesToUpload = @(
    "index.html",
    "styles.css", 
    "script.js",
    "CNAME"
)

$foldersToUpload = @(
    "html5up-miniport"
)

# T·∫°o FTP Web Request
function Upload-File {
    param([string]$LocalPath, [string]$RemotePath)
    
    try {
        $ftpRequest = [System.Net.FtpWebRequest]::Create("ftp://$FtpServer$RemotePath")
        $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::UploadFile
        $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($FtpUsername, $FtpPassword)
        $ftpRequest.UsePassive = $true
        $ftpRequest.UseBinary = $true
        $ftpRequest.KeepAlive = $false
        
        $fileContents = [System.IO.File]::ReadAllBytes($LocalPath)
        $ftpStream = $ftpRequest.GetRequestStream()
        $ftpStream.Write($fileContents, 0, $fileContents.Length)
        $ftpStream.Close()
        
        Write-Host "‚úÖ ƒê√£ upload: $LocalPath" -ForegroundColor Green
        return $true
    }
    catch {
        Write-Host "‚ùå L·ªói upload $LocalPath : $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

function Upload-Folder {
    param([string]$LocalFolder, [string]$RemoteFolder)
    
    try {
        # T·∫°o th∆∞ m·ª•c tr√™n server
        $ftpRequest = [System.Net.FtpWebRequest]::Create("ftp://$FtpServer$RemoteFolder")
        $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::MakeDirectory
        $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($FtpUsername, $FtpPassword)
        $ftpRequest.UsePassive = $true
        
        try {
            $response = $ftpRequest.GetResponse()
            Write-Host "üìÅ ƒê√£ t·∫°o th∆∞ m·ª•c: $RemoteFolder" -ForegroundColor Cyan
        }
        catch {
            # Th∆∞ m·ª•c c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i
        }
        
        # Upload t·∫•t c·∫£ file trong th∆∞ m·ª•c
        $files = Get-ChildItem -Path $LocalFolder -Recurse -File
        foreach ($file in $files) {
            $relativePath = $file.FullName.Substring((Get-Location).Path.Length + 1)
            $remotePath = $RemoteFolder + $relativePath.Replace("\", "/")
            
            # T·∫°o th∆∞ m·ª•c con n·∫øu c·∫ßn
            $remoteDir = Split-Path $remotePath -Parent
            if ($remoteDir -ne $RemoteFolder) {
                $ftpRequest = [System.Net.FtpWebRequest]::Create("ftp://$FtpServer$remoteDir")
                $ftpRequest.Method = [System.Net.WebRequestMethods+Ftp]::MakeDirectory
                $ftpRequest.Credentials = New-Object System.Net.NetworkCredential($FtpUsername, $FtpPassword)
                $ftpRequest.UsePassive = $true
                
                try {
                    $response = $ftpRequest.GetResponse()
                }
                catch {
                    # Th∆∞ m·ª•c c√≥ th·ªÉ ƒë√£ t·ªìn t·∫°i
                }
            }
            
            Upload-File $file.FullName $remotePath
        }
    }
    catch {
        Write-Host "‚ùå L·ªói upload th∆∞ m·ª•c $LocalFolder : $($_.Exception.Message)" -ForegroundColor Red
    }
}

# Upload c√°c file ch√≠nh
Write-Host "üì§ ƒêang upload c√°c file ch√≠nh..." -ForegroundColor Yellow
foreach ($file in $filesToUpload) {
    if (Test-Path $file) {
        Upload-File $file ($FtpPath + $file)
    } else {
        Write-Host "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file: $file" -ForegroundColor Yellow
    }
}

# Upload c√°c th∆∞ m·ª•c
Write-Host "üì§ ƒêang upload c√°c th∆∞ m·ª•c..." -ForegroundColor Yellow
foreach ($folder in $foldersToUpload) {
    if (Test-Path $folder) {
        Upload-Folder $folder ($FtpPath + $folder + "/")
    } else {
        Write-Host "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c: $folder" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üéâ Ho√†n th√†nh upload!" -ForegroundColor Green
Write-Host "üåê Website s·∫Ω c√≥ s·∫µn t·∫°i: https://jkhoa.dev" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìã L∆∞u √Ω:" -ForegroundColor Yellow
Write-Host "- C√≥ th·ªÉ m·∫•t v√†i ph√∫t ƒë·ªÉ DNS c·∫≠p nh·∫≠t"
Write-Host "- Ki·ªÉm tra website sau 5-10 ph√∫t"
Write-Host "- N·∫øu g·∫∑p l·ªói, h√£y ki·ªÉm tra th√¥ng tin FTP v√† k·∫øt n·ªëi internet" 